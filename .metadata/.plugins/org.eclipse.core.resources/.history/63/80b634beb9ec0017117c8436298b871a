package utbm.ia54.ant2dgrid.gui

import utbm.ia54.ant2dgrid.gui.fx.FxViewerController
import javafx.fxml.FXML
import javafx.scene.control.Button
import utbm.ia54.ant2dgrid.gui.fx.ConfigureSimulation
import javafx.scene.layout.GridPane
import utbm.ia54.ant2dgrid.objects.Cell
import java.util.List
import utbm.ia54.ant2dgrid.objects.MapGenerator
import javafx.scene.paint.Color
import utbm.ia54.ant2dgrid.Enum.CellState
import javafx.scene.Group
import javafx.scene.layout.Pane

/** 
 * @author aelez
 * 
 */

class Ant2DGridFxViewerController extends FxViewerController{

	@FXML
	var spawnButton : Button
	
	@FXML
	var gridZone : GridPane
	
	val generator = new MapGenerator

	var grid : List<Cell>
	
	var mapCreated = false
	
	@FXML
	def actionSpawn{
		gridZone = new GridPane()
		grid = generator.generateMap
		var evt = new ConfigureSimulation(5,10,10,grid)
		emitToAgent(evt)
		
	}
	
	def setColor(state : CellState, cell : Cell){
		var color : Color
		
		switch(state){
			case CellState.WALL:
				color = Color.CHOCOLATE
			case CellState.HOME:
				color = Color.AZURE
			case CellState.FOOD:
				color = Color.AQUA
			default: 
				color = Color.DARKGRAY
		}
	}
	
	static class GridManager extends GridPane{
		var pane = new Pane()
		var display = new Group(pane)
		var rows : int
		var cols : int
		
		new(rows : int, cols : int){
			this.cols = cols
			this.rows = rows
			for (var i = 0; i < cols; i++) {
				for (var j = 0; j < rows; j++) {
					
				}
			}
		}
		
		def construct(list : List<Cell>){
			for(var i = 0; i<cols; i++){
				for(var j = 0; j<rows; j++){
					
				}
			}
		}
	}
	
	
}
