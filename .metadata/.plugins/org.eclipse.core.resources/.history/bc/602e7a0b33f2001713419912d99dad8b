/** 
 * 
 */
package utbm.ia54.ant2dgrid.agents

import io.sarl.core.Initialize
import io.sarl.core.Logging
import utbm.ia54.ant2dgrid.gui.Ant2DGridFxViewerController

import io.sarl.core.InnerContextAccess
import io.sarl.core.Lifecycle
import utbm.ia54.ant2dgrid.events.ConfigureSimulation
import utbm.ia54.ant2dgrid.events.StartSimulation
import io.sarl.core.Destroy
import utbm.ia54.ant2dgrid.gui.fx.AppExit
import utbm.ia54.ant2dgrid.events.EndAgent
import io.sarl.core.Behaviors
/** 
 * @author Michel
 * 
 */
agent BootAgent {
	uses Logging, InnerContextAccess, Lifecycle

	var ctrl : Ant2DGridFxViewerController = null
	
	on Initialize {
		loggingName = "BootAgent " + this.ID
		if (ctrl === null) {
			ctrl = occurrence.parameters.get(0) as Ant2DGridFxViewerController
		}
		info("BootAgent launched !, start to spawn the environment !")
		spawnInContext(typeof(Environment),innerContext, ctrl)
		innerContext.defaultSpace.emit(ID,new StartSimulation)
	}

	on ConfigureSimulation {
		innerContext.defaultSpace.emit(ID, new StartSimulation)
	}

	on Destroy{
		info("BootAgent go die!")
	}
	
	/*
	 * Kill all inner agents
	 */
	on AppExit[hasMemberAgent]{
		innerContext.defaultSpace.emit(this.ID, new AppExit)
	}
	
	/*
	 * Kill itselft on exit signal after all inner agents are killed
	 */
	on AppExit [!hasMemberAgent] {
		killMe
	}

	on EndAgent [!hasMemberAgent] {
		killMe
	}

	on EndAgent{
		innerContext.defaultSpace.emit(this.ID, new EndAgent)
	}
}
