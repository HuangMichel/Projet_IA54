/** 
 * 
 */
package utbm.ia54.ant2dgrid.agents

import io.sarl.core.Initialize
import io.sarl.core.Logging
import utbm.ia54.ant2dgrid.gui.Ant2DGridFxViewerController
import io.sarl.core.InnerContextAccess
import io.sarl.core.Lifecycle
import utbm.ia54.ant2dgrid.events.StartSimulation
import utbm.ia54.ant2dgrid.events.EndSimulation
import io.sarl.core.Destroy
import utbm.ia54.ant2dgrid.events.AntInitialize
import utbm.ia54.ant2dgrid.capacities.EnvironmentManagerCapacity
import utbm.ia54.ant2dgrid.skills.EnvironmentManagerSkill
import io.sarl.lang.core.Space
import io.sarl.lang.core.SpaceID

/** 
 * @author Michel
 * 
 */
agent Environment {
	
	uses Lifecycle, Logging, InnerContextAccess, EnvironmentManagerCapacity
	
	/* The fx viewer controller */
	private var ctrl : Ant2DGridFxViewerController = null
	
	on Initialize {
		loggingName = "Environment " + this.ID
		if (ctrl === null) {
			ctrl = occurrence.parameters.get(0) as Ant2DGridFxViewerController
		}
		setSkill(new EnvironmentManagerSkill(ctrl.width, ctrl.height, ctrl.grid, ctrl.antQuantity), typeof(EnvironmentManagerCapacity))
		info("CELL HOME :" + homeCell.toString)
		info("CELL FOOD :" + foodCell.toString)
		info("The agent Environment was started.")
	}
	
	on AntInitialize[occurrence.isInInnerDefaultSpace]{
		info("Ant created " + occurrence.source.UUID)
		setAddress(occurrence.source.UUID, occurrence.source)
		createAnt(occurrence.source.UUID, occurrence.body)
	}
	
	on StartSimulation{
		info("StartSimulation")
		for(var i = 0; i<antQuantity; i++){
			spawnInContext(typeof(Ant), innerContext,#[i+1, homeCell.position])
		}
	}
	
	on Destroy{
		info("Agent Environment go die!")
	}
	
	on EndSimulation{
		killMe
	}
}
