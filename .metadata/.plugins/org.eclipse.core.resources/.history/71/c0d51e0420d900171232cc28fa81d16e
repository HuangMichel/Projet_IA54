/** 
 * 
 */
package utbm.ia54.ant2dgrid.objects

import java.util.ArrayList
import utbm.ia54.ant2dgrid.Enum.CellState
import java.util.List

/** 
 * @author Michel
 * 
 */
class MapGenerator {
	private var grid : ArrayList<Cell>
	private val chance : float
	private val width : int
	private val height : int
	
	new(){
		this.grid = new ArrayList<Cell>
		this.chance = 0.4f
		this.width = 45
		this.height = 45
	}
	
	new(grid : ArrayList<Cell>, chance : float, width : int, height : int) {
		this.grid = grid
		this.chance = chance
		this.width = width
		this.height = height
	}
	
	def initializeMap{
		for(var i = 0; i<width; i++){
			for(var j = 0; j<height; j++){
				var cell : Cell
				if (Math.random() < chance) {
					cell = new Cell(i, j)
				}else{
					cell = new Cell(i, j, CellState.WALL)
				}
				grid.add(cell)
			}
		}
	}
	
	def simulationStep(oldGrid : ArrayList<Cell>) : List<Cell> {
		var newGrid : ArrayList<Cell>
		for(var i = 0; i<width; i++){
			for(var j = 0; j<height; i++){
				var count = 0
				if(oldGrid.get(((j*width)+i)).state == CellState.NORMAL){
					
				}else{
					
				}
			}
		}
		newGrid
	}
	
	def countAliveNeighbours(grid : ArrayList<Cell>, x : int, y: int) : int{
		var count = 0
		
		count
	}
	
	def generateMap{
		
	}
}
