/** 
 * 
 */
package utbm.ia54.ant2dgrid.gui.fx

import io.sarl.core.AgentSpawned
import io.sarl.core.Behaviors
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import io.sarl.core.Logging
import io.sarl.core.Schedules
import io.sarl.lang.core.Agent
import io.sarl.util.OpenEventSpaceSpecification
import java.util.UUID
import javafx.application.Application

import static utbm.ia54.ant2dgrid.gui.fx.FxApplication.*
import io.sarl.core.InnerContextAccess

/** Abstract definition of an agent that is able to boot a JavaFX application. 
 */
 
abstract agent FxBootAgent {

	uses Lifecycle, DefaultContextInteractions, Behaviors, Schedules, Logging

	var launcherID : UUID
	var startFeedback : ()=>void
	
	on Initialize {
		loggingName = "FxBootAgent"
		var ^space = defaultContext.createSpace(
			typeof(OpenEventSpaceSpecification),
			UUID::randomUUID
		)
		^space.register(asEventListener)
		FxApplication::eventSpaceCandidate = ^space
		execute [Application::launch(this.fxApplicationType)]
	}

	on AppStart {
		this.startFeedback = occurrence.startFeedBack
		this.launcherID = UUID::randomUUID
		spawnInContextWithID(this.applicationBootAgentType, this.launcherID, defaultContext, occurrence.fxController)
	}

	on AgentSpawned [it.agentIdentifiers.contains(this.launcherID)] {
		var feedback = this.startFeedback
		this.startFeedback = null
		feedback?.apply		
	}

	on AppExit {
		killMe
	}

	/*on ConfigureSimulation {
		info("received conf")
		val listparam = new ArrayList()
		listparam.add(occurrence.antQuantity)
		listparam.add(occurrence.width)
		listparam.add(occurrence.height)
		listparam.add(occurrence.grid)
		spawn(typeof(BootAgent), listparam)		
	}*/
	abstract def getFxApplicationType : Class<? extends FxApplication>

	abstract def getApplicationBootAgentType : Class<? extends Agent>

	/*def buildApplicationBootAgentParameters(launcherID : UUID, controller : FxViewerController,
		parameters : List<Object>) {
		// No additional parameter to give to the application boot agent
	}*/

}